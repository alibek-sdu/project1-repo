# -*- coding: utf-8 -*-
"""LaptopsByParsing.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Pqhh6xwcwP7krKUs0S9FNMXhsIrMbbnx
"""

import requests
from bs4 import BeautifulSoup
import pandas as pd
import matplotlib.pyplot as plt
import re

x = requests.get('https://www.technodom.kz/catalog/smartfony-i-gadzhety/smartfony-i-telefony/smartfony?page=2')





def getRatings(n):
  url = 'https://www.technodom.kz/catalog/noutbuki-i-komp-jutery/noutbuki-i-aksessuary/noutbuki?r46_input_query=%D0%9D%D0%9E%D0%A3%D0%A2&r46_search_query=%D0%BD%D0%BE%D1%83%D1%82%D0%B1%D1%83%D0%BA%D0%B8&recommended_by=instant_search&recommended_code=%D0%BD%D0%BE%D1%83%D1%82&page='+str(n)
  response = requests.get(url)

  if response.status_code == 200:
      soup = BeautifulSoup(response.text, 'html.parser')
      trim = re.compile(r'[^\d.,]+')

      # Assuming each product is contained within a 'li' element with class 'ProductList_item__9Jj7j'
      product_items = soup.find_all('li', attrs={'class':'ProductList_item__9Jj7j','data-testid':"category-page-list-item"})

      data = {'Model': [], 'Price': [], 'url':[]}

      for product_item in product_items:
          # Extracting product title
          title = product_item.find('p', attrs={'data-testid':"product-title"}).text.strip()
          url = product_item.find('a')['href']

          # Extracting product rating
          rating_element = product_item.find('p', class_='RatingAndReviewsCount_review__EiJSu')
          rating = rating_element.text.strip() if rating_element else 'No rating'

          # Extracting product price
          price = product_item.find('p', class_='ProductCardPrices_price__5dlTx').text.strip()

          data['Model'].append(title)
          data['Price'].append(int(trim.sub('', price)))
          data['url'].append(url)
          # print(f"Title: {title}")
          # print(f"Rating: {rating}")
          # print(f"Price: {price}")
          # print("----")
      return data

  else:
      print(f"Failed to retrieve the page. Status code: {response.status_code}")
      return

data = {'Model': [], 'Price': []}
for i in range(1,1):
  dt = getRatings(i)
  data['Model'].extend(dt['Model'])
  data['Price'].extend(dt['Price'])

df = pd.DataFrame(data)


print("Basic Statistics:")
print(df.describe())

# Plotting a bar chart of laptop prices
plt.figure(figsize=(100, 60))
plt.bar(df['Model'], df['Price'])
plt.xlabel('Laptop Model')
plt.ylabel('Price ($)')
plt.title('Laptop Prices')
plt.xticks(rotation=45, ha='right')
plt.show()

maxDf = df.max(axis=0)
print(maxDf)

df.sort_values(by=['Price'], na_position='first')

dt = getRatings(1)
df = pd.DataFrame(dt)

df

for index, row in df.iterrows():
  product = requests.get('https://www.technodom.kz'+row['url'])
  print('https://www.technodom.kz'+row['url'])
  product_soup = BeautifulSoup(product.text, 'html.parser')
  prod = product_soup.find_all("p", class_='Typography Description_text__yaQY5 Description_link__x7l4z Description_rightText__8uX08 Typography__L')
  print(prod)